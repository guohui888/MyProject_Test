/**   
 * @Title: SearchActivity.java 
 * @Package cn.com.zhoufu.mouth.activity.search 
 * @Description: TODO(分类搜索) 
 * @author 王小杰   
 * @date 2014-2-13 下午2:33:40
 * @version V1.0   
 */
package cn.com.zhoufu.mouth.activity.category;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.RadioGroup;
import cn.com.zhoufu.mouth.R;
import cn.com.zhoufu.mouth.activity.BaseActivity;
import cn.com.zhoufu.mouth.activity.cart.ProductDetailActivity;
import cn.com.zhoufu.mouth.adapter.SearchAdapter;
import cn.com.zhoufu.mouth.constants.Constant;
import cn.com.zhoufu.mouth.model.Bean;
import cn.com.zhoufu.mouth.model.SearchInfo;
import cn.com.zhoufu.mouth.utils.WebServiceUtils;
import cn.com.zhoufu.mouth.utils.WebServiceUtils.WebServiceCallBack;
import cn.com.zhoufu.mouth.utils.XMLParser;
import cn.com.zhoufu.mouth.view.pullview.AbOnListViewListener;
import cn.com.zhoufu.mouth.view.pullview.AbPullListView;

import com.alibaba.fastjson.JSON;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnCheckedChange;
import com.lidroid.xutils.view.annotation.event.OnItemClick;

public class SearchActivity extends BaseActivity implements
		AbOnListViewListener {

	@ViewInject(R.id.searchListView)
	private AbPullListView mListView;

	@ViewInject(R.id.radioGroup)
	private RadioGroup radioGroup;

	String id;

	SearchAdapter mAdapter;

	List<SearchInfo> list;

	private int pageIndex = 1, pageSize = 20;

	String sort;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setLayout(this, R.layout.activity_search_result);
		setTitle("商品列表");
		initView();
	}

	public void initView() {
		id = getIntent().getStringExtra("id");
		mAdapter = new SearchAdapter(mContext);
		list = new ArrayList<SearchInfo>();
		mAdapter.setList(list);
		mListView.setAdapter(mAdapter);
		sort = "click_count";
		search(pageIndex, pageSize, sort);

		mListView.setPullLoadEnable(true);
		mListView.setPullRefreshEnable(true);
		mListView.setAbOnListViewListener(this);
	}

	@OnItemClick(R.id.searchListView)
	public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
		if (!XMLParser.isNetworkAvailable(mContext)) {
			application.showToast("网络未连接");
			return;
		}
		Intent intent = new Intent(mContext, ProductDetailActivity.class);
		intent.putExtra("info", (SearchInfo) mAdapter.getItem((int) (arg3)));
		startActivity(intent);
	}

	public void search(int pageIndex, int pageSize, String sort) {
		HashMap<String, Object> map = new HashMap<String, Object>();
		map.put("Parent_ID", id);
		map.put("Page", pageIndex);
		map.put("Count", pageSize);
		map.put("Sort", sort);
		map.put("Sortord", "desc");
		Log.e("-----", map.toString());
		WebServiceUtils.callWebService(Constant.S_CommodityMessage, map,
				new WebServiceCallBack() {
					public void callBack(Object result) {
						if (result != null) {
							Bean bean = JSON.parseObject(result.toString(),
									Bean.class);
							List<SearchInfo> list = JSON.parseArray(
									bean.getData(), SearchInfo.class);
							mAdapter.addAll(list);
							for (int i = 0; i < list.size(); i++) {
								Log.e("TAG", list.get(i).getGoods_img());
							}
						}
					}
				});
	}

	public void onRefresh() {
		pageIndex = 1;
		mAdapter.removeAll();
		search(pageIndex, pageSize, "add_time");
		mListView.stopRefresh();
	}

	public void onLoadMore() {
		pageIndex++;
		search(pageIndex, pageSize, "add_time");
		mListView.stopLoadMore();
	}

	@OnCheckedChange(R.id.radioGroup)
	public void onCheckedChanged(RadioGroup group, int checkedId) {
		switch (checkedId) {
		case R.id.radioButton1:
			sort = "click_count";
			pageIndex = 1;
			mAdapter.removeAll();
			search(pageIndex, pageSize, sort);
			break;
		case R.id.radioButton2:
			sort = "shop_price";
			pageIndex = 1;
			mAdapter.removeAll();
			search(pageIndex, pageSize, sort);
			break;
		case R.id.radioButton3:
			sort = "last_update";
			pageIndex = 1;
			mAdapter.removeAll();
			search(pageIndex, pageSize, sort);
			break;
		case R.id.radioButton4:
			sort = "add_time";
			pageIndex = 1;
			mAdapter.removeAll();
			search(pageIndex, pageSize, sort);
			break;
		}
	}
}
