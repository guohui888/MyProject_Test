/**   
 * @Title: SettingActivity.java 
 * @Package cn.com.zhoufu.mouth.activity.setting 
 * @Description: TODO(设置activity) 
 * @author 王小杰
 * @date 2014-2-10 下午4:33:26 
 * @version V1.0   
 */
package cn.com.zhoufu.mouth.activity.setting;

import java.io.File;
import java.util.HashMap;

import android.app.Activity;
import android.app.Dialog;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.Display;
import android.view.Gravity;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import cn.com.zhoufu.mouth.R;
import cn.com.zhoufu.mouth.activity.BaseActivity;
import cn.com.zhoufu.mouth.activity.mine.LoginActivity;
import cn.com.zhoufu.mouth.constants.Constant;
import cn.com.zhoufu.mouth.utils.DataCleanManager;
import cn.com.zhoufu.mouth.utils.XMLParser;

import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;

public class SettingActivity extends BaseActivity implements OnClickListener {

	@ViewInject(R.id.tvAbout)
	private TextView tvAbout;

	@ViewInject(R.id.tvFeedBack)
	private TextView tvFeedBack;

	@ViewInject(R.id.loginOutBtn)
	private Button loginOutBtn;

	@ViewInject(R.id.tvUpdate)
	private RelativeLayout tvUpdate;

	@ViewInject(R.id.version)
	private TextView version;

	@ViewInject(R.id.clear)
	private TextView clear;

	private Dialog dialog;

	String serverCode;

	String androidUrl;
	
	String versionCode;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setLayout(this, R.layout.activity_settings);
		setTitle("设置");
		try {
			versionCode = XMLParser.getVersionName(mContext);
			version.setText(versionCode );
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	protected void onResume() {
		super.onResume();
		if (application.getUser().getUser_id() == 0)
			loginOutBtn.setVisibility(View.GONE);
	}

	@OnClick(R.id.tvAbout)
	public void aboutClick(View v) {
		startActivity(new Intent(mContext, AboutActivity.class));
	}

	@OnClick(R.id.tvFeedBack)
	public void feedBackClick(View v) {
		startActivity(new Intent(mContext, FeedBackActivity.class));
	}

	@OnClick(R.id.loginOutBtn)
	public void loginOutClick(View v) {
		application.logout();
		startActivity(new Intent(mContext, LoginActivity.class));
	}

	@OnClick(R.id.clear)
	public void clear(View v) {
		DataCleanManager.clearAppCache(this);
	}

	@OnClick(R.id.tvUpdate)
	public void updateClick(View v) {
		if (!XMLParser.isNetworkAvailable(mContext)) {
			application.showToast("网络未连接");
			return;
		}
		showProgress("正在检查版本");
		new Thread(new updateTask()).start();
	}

	private class updateTask implements Runnable {

		public void run() {
			try {
				update();
			} catch (Exception e) {
			}
		}

	}

	// 更新
	public void update() {
		XMLParser parser = new XMLParser();
		String xml = parser.getXmlFromUrl(Constant.UPDATE_VERSION_URL);
		Log.e("xml", xml);
		HashMap<String, String> map = (HashMap<String, String>) parser.ParseUpdateInfo(xml);
		serverCode = map.get("androidversion");
		androidUrl = map.get("androidurl");
		int versionCode = 0;

		try {
			versionCode = XMLParser.getVersionCode(mContext);
			if (Integer.parseInt(serverCode) > versionCode) {
				Message msg = new Message();
				msg.what = 1;
				mHandler.sendMessage(msg);
			} else {
				Message msg = new Message();
				msg.what = 2;
				mHandler.sendMessage(msg);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private Handler mHandler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 1:
				if (myProgressDialog != null) {
					dismissProgress();
				}
				updateDialog();
				break;
			case 2:
				application.showToast("您当前的版本是最新版");
				if (myProgressDialog != null) {
					dismissProgress();
				}
				break;
			}
		};
	};

	public void updateDialog() {
		if (dialog == null) {
			dialog = new Dialog(mContext, R.style.dialog);
			dialog.setCancelable(true);
			dialog.setCanceledOnTouchOutside(true);
			dialog.setContentView(R.layout.dialog_update);

			Button btnTakePhoto = (Button) dialog.findViewById(R.id.update_btn);
			Button btnPickPhoto = (Button) dialog.findViewById(R.id.no_update_btn);
			Button btnCancel = (Button) dialog.findViewById(R.id.btn_cancel);

			btnTakePhoto.setOnClickListener(this);
			btnPickPhoto.setOnClickListener(this);
			btnCancel.setOnClickListener(this);

			WindowManager m = ((Activity) mContext).getWindowManager();
			Display d = m.getDefaultDisplay();
			WindowManager.LayoutParams params = dialog.getWindow().getAttributes();
			params.width = (int) (d.getWidth() * 0.99);
			params.height = (int) (d.getHeight() * 0.5);
			Window window = dialog.getWindow();
			window.setGravity(Gravity.BOTTOM);
		}
		dialog.show();
	}

	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btn_cancel:
			dialog.dismiss();
			break;
		case R.id.no_update_btn:
			dialog.dismiss();
			break;
		case R.id.update_btn:
			Constant.SERVER_CONFIG_LOADPATH = androidUrl;
			startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(Constant.SERVER_CONFIG_LOADPATH)));
			dialog.dismiss();
			break;
		}
	}
}
