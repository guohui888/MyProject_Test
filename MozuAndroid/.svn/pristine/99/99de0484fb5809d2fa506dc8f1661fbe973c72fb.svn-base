/**   
 * @Title: CategoryFragment.java 
 * @Package cn.com.zhoufu.mouth.activity.category 
 * @Description: TODO(商品分类fragment) 
 * @author 王小杰   
 * @date 2014-2-11 下午1:53:30 
 * @version V1.0   
 */
package cn.com.zhoufu.mouth.activity.category;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ListView;
import cn.com.zhoufu.mouth.R;
import cn.com.zhoufu.mouth.activity.BaseFragment;
import cn.com.zhoufu.mouth.adapter.Categary2Adapter;
import cn.com.zhoufu.mouth.adapter.CategaryAdapter;
import cn.com.zhoufu.mouth.constants.Constant;
import cn.com.zhoufu.mouth.model.Bean;
import cn.com.zhoufu.mouth.model.CategaryInfo;
import cn.com.zhoufu.mouth.utils.WebServiceUtils;
import cn.com.zhoufu.mouth.utils.WebServiceUtils.WebServiceCallBack;
import cn.com.zhoufu.mouth.utils.XMLParser;

import com.alibaba.fastjson.JSON;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnItemClick;

public class CategoryFragment extends BaseFragment implements OnTouchListener {

	@ViewInject(R.id.cateListView)
	private ListView mListView;

	@ViewInject(R.id.cateListView2)
	private ListView mListView2;

	@ViewInject(R.id.cateListView3)
	private ListView mListView3;

	private CategaryAdapter mAdapter;

	private Categary2Adapter mAdapter2;

	private Categary2Adapter mAdapter3;

	private List<CategaryInfo> list;

	private List<CategaryInfo> list2;

	private List<CategaryInfo> list3;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.fragment_category, container, false);
		ViewUtils.inject(this, view);
		return view;
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
		initView();
		if (!XMLParser.isNetworkAvailable(mContext)) {
			application.showToast("网络未连接");
			return;
		}
		getCateGary(0);
	}

	public void initView() {
		list = new ArrayList<CategaryInfo>();
		mAdapter = new CategaryAdapter(mContext);
		mAdapter2 = new Categary2Adapter(mContext);
		mAdapter3 = new Categary2Adapter(mContext);
		mAdapter.setList(list);
		mListView.setAdapter(mAdapter);

		mListView.setOnTouchListener(this);
		mListView2.setOnTouchListener(this);
		mListView3.setOnTouchListener(this);
	}

	public void getCateGary(int parseId) {
		HashMap<String, Object> map = new HashMap<String, Object>();
		map.put("Parent_ID", parseId);
		showProgress("正在努力加载中");
		WebServiceUtils.callWebService(Constant.S_CommodityClassify, map, new WebServiceCallBack() {

			public void callBack(Object result) {
				dismissProgress();
				Log.i("info", result.toString());
				if (result != null) {
					Bean bean = JSON.parseObject(result.toString(), Bean.class);
					List<CategaryInfo> list = JSON.parseArray(bean.getData(), CategaryInfo.class);
					mAdapter.addAll(list);
				}
			}
		});
	}

	@OnItemClick(R.id.cateListView)
	public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
		if (mListView2.getVisibility() == View.GONE) {
			mListView2.setVisibility(View.VISIBLE);
		}
		mAdapter2.removeAll();
		list2 = new ArrayList<CategaryInfo>();
		mAdapter2.setList(list2);
		mListView2.setAdapter(mAdapter2);
		getCateGary2(list.get(arg2).getCat_id());
	}

	public void getCateGary2(int parseId) {
		HashMap<String, Object> map = new HashMap<String, Object>();
		map.put("Parent_ID", parseId);
		WebServiceUtils.callWebService(Constant.S_CommodityClassify, map, new WebServiceCallBack() {

			public void callBack(Object result) {
				Log.i("info", result.toString());
				if (result != null) {
					Bean bean = JSON.parseObject(result.toString(), Bean.class);
					List<CategaryInfo> list = JSON.parseArray(bean.getData(), CategaryInfo.class);
					mAdapter2.addAll(list);
				}
			}
		});
	}

	@OnItemClick(R.id.cateListView2)
	public void onItem2Click(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
		if (mListView3.getVisibility() == View.GONE) {
			mListView3.setVisibility(View.VISIBLE);
		}
		mAdapter3.removeAll();
		list3 = new ArrayList<CategaryInfo>();
		mAdapter3.setList(list3);
		mListView3.setAdapter(mAdapter3);
		getCateGary3(list2.get(arg2).getCat_id());
	}

	public void getCateGary3(int parseId) {
		HashMap<String, Object> map = new HashMap<String, Object>();
		map.put("Parent_ID", parseId);
		WebServiceUtils.callWebService(Constant.S_CommodityClassify, map, new WebServiceCallBack() {

			public void callBack(Object result) {
				Log.i("info", result.toString());
				if (result != null) {
					Bean bean = JSON.parseObject(result.toString(), Bean.class);
					List<CategaryInfo> list = JSON.parseArray(bean.getData(), CategaryInfo.class);
					mAdapter3.addAll(list);
				}
			}
		});
	}

	public boolean onTouch(View v, MotionEvent event) {
		switch (v.getId()) {
		case R.id.cateListView:
			if (mListView2.getVisibility() == View.VISIBLE) {
				mListView2.setVisibility(View.GONE);
			}
			if (mListView3.getVisibility() == View.VISIBLE) {
				mListView3.setVisibility(View.GONE);
			}
			break;
		case R.id.cateListView2:
			if (mListView3.getVisibility() == View.VISIBLE) {
				mListView3.setVisibility(View.GONE);
			}
			break;
		}
		return false;
	}

	@OnItemClick(R.id.cateListView3)
	public void onItem3Click(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
		Intent intent = new Intent(mContext, SearchActivity.class);
		intent.putExtra("id", list3.get(arg2).getCat_id() + "");
		startActivity(intent);
	}
}
